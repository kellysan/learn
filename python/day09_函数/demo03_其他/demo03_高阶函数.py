#! /usr/bin/env python
# Autor: sanyapeng

'''
高阶函数（High-order funciton）
    前提 函数名，指向函数对象，像普通变量一样进行操作

    一个函数可以接收，其他函数作为参数，那么该函数就叫做高阶函数
'''


'''
总结：
参数详解
   1 位置参数
       必须传入实参，个数对应
   2 默认值参数
       定义函数的时候，某些形参给直接复制，调用的时候如果传入实参使用实参，如果么有传入实参使用默认值
   3 可变参数
       定义函数的时候，某些参数的个数不行，使用可变参数 *args
          将接收的实参，封装成一个元组，在函数中使用
   4 关键字参数
       调用函数的时候，给形参进行复制，写清楚形参名 test(a,b=10)
       特殊情况，使用**kw 接收所有没有对应的形参，kw将接收到的实参封装成字典
   5 命名关键字参数
       参数列表(位置参数，默认参数，*,参数1，参数2)
   6 组合参数
       参数列表（位置参数，默认参数，可变参数，命名关键字参数，关键字参数）
       
   7 变量作用域
       1 命名空间 namespace
           命名空间就是名字和对象的映射
           理解为一个变量名所启用的范围
           
           要遵循：LEGB 的查找规则
               L local 局部，函数内部
               E Enclosing 密封，函数嵌套的时候，内层函数可以访问外层函数的变量
               G global 全局的，函数外部定义
               B Built-in 内置的，python提供的
               
       2 作用域 scope
           A 局部变量，函数里声明的变量，只能在函数中使用
               声明周期：随着函数的调用而创建，随着函数执行结束而销毁
           
           B 全局变量， 函数外部声明的变量，所有函数都可以使用
               a 默认情况下，函数内部不允许改变全局变量，只读
                   如果函数中修改全局变量本质上新增一个同名的局部变量
               b 但是可以使用global官架子标记函数中的变量，表示为全局的
           C 内层函数可以访问外层函数的变量
               a 默认情况下，也不允许修改
               b 但是可以使用 nolocal 关键字，标记是外层的变量，可以修改了
               
        
三 、函数的本质
    1 函数的本质，就是函数的名字指向了函数的对象
        类比于变量
    2 通过函数的名字，可以将函数复制给其他的变量，那么该变量也是一个函数，可以调用了
    
    3 将函数作为另一个函数的参数，也可以作为另一个函数的返回值
        --> 高阶函数
    4 匿名函数 使用lambda表达式实现
        lambda 语法 lambda 形参：表达式
        
'''
